import { useState } from 'react'
import { toast } from 'react-toastify'

function Profile({ user, onUpdate }) {
  const [avatarFile, setAvatarFile] = useState(null)
  const [loading, setLoading] = useState(false)
  const [passwords, setPasswords] = useState({ current: '', new: '' })
  const API_URL = import.meta.env.VITE_API_URL;


  const handleUpload = async () => {
    if (!avatarFile) return
    setLoading(true)
    const formData = new FormData()
    formData.append('avatar', avatarFile)

    try {
      const res = await fetch('${API_URL}/avatar', {
        method: 'POST',
        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },
        body: formData,
      })
      const data = await res.json()
      if (res.ok) {
        toast.success('–ê–≤–∞—Ç–∞—Ä –æ–±–Ω–æ–≤–ª—ë–Ω')
        onUpdate({ avatar_url: data.url })
      } else {
        toast.error(data.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏')
      }
    } catch (e) {
      toast.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏')
    } finally {
      setLoading(false)
    }
  }

  const handleChangePassword = async () => {
    if (!passwords.current || !passwords.new) return
    try {
      const res = await fetch('${API_URL}/change-password', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${localStorage.getItem('token')}`,
        },
        body: JSON.stringify(passwords),
      })
      const data = await res.json()
      if (res.ok) {
        toast.success('–ü–∞—Ä–æ–ª—å –∏–∑–º–µ–Ω—ë–Ω')
        setPasswords({ current: '', new: '' })
      } else {
        toast.error(data.error || '–û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è')
      }
    } catch {
      toast.error('–û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è')
    }
  }

  const getCurrencyName = (role) => {
    switch (role) {
      case '–ì–æ—Å': return 'Andriana-Coin'
      case '–ó–∞–∫—Ä—ã–≤–∞—é—â–∏–π': return 'Rezak-Coin'
      default: return 'Sknk-Coin'
    }
  }

  return (
    <div className="fade-in max-w-md mx-auto space-y-6">
      <h2 className="text-2xl font-bold text-purple-400 text-center">üë§ –ü—Ä–æ—Ñ–∏–ª—å</h2>

      <div className="bg-zinc-800 p-4 rounded-xl border border-zinc-600 text-center">
        <img
          src={user.avatar_url || '/default-avatar.png'}
          alt="avatar"
          className="w-24 h-24 rounded-full object-cover mx-auto border-2 border-purple-400"
        />
        <p className="mt-2 text-lg font-semibold">{user.name}</p>
        <p className="text-sm text-purple-300 mt-1">–†–æ–ª—å: {user.role || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
        <p className="text-sm text-zinc-400">–í–∞–ª—é—Ç–∞: {getCurrencyName(user.role)}</p>
      </div>

      <div className="bg-zinc-800 p-4 rounded-xl border border-zinc-600">
        <h3 className="text-lg font-bold text-purple-300 mb-2">üì∏ –û–±–Ω–æ–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä</h3>
        <input
          type="file"
          accept="image/*"
          onChange={(e) => setAvatarFile(e.target.files[0])}
          className="input"
        />
        <button onClick={handleUpload} className="btn btn-primary mt-2" disabled={loading}>
          {loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å'}
        </button>
      </div>

      <div className="bg-zinc-800 p-4 rounded-xl border border-zinc-600">
        <h3 className="text-lg font-bold text-purple-300 mb-2">üîë –°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å</h3>
        <input
          type="password"
          placeholder="–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å"
          value={passwords.current}
          onChange={(e) => setPasswords({ ...passwords, current: e.target.value })}
          className="input mb-2"
        />
        <input
          type="password"
          placeholder="–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å"
          value={passwords.new}
          onChange={(e) => setPasswords({ ...passwords, new: e.target.value })}
          className="input mb-2"
        />
        <button onClick={handleChangePassword} className="btn btn-secondary">
          –°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
        </button>
      </div>
    </div>
  )
}

export default Profile
